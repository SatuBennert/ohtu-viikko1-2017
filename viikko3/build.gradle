/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'bensatu' at '30.3.2017 12:04' with Gradle 2.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Define the location of the main program for jar -task of Gradle
jar {
    manifest {
        attributes 'Main-Class': 'Main'
    }
}

// gradle task named run needs application -plugin to execute
apply plugin: 'application'

// gradle task named run needs the main class to be defined like this: 
mainClassName = 'Main'


// let's add the terminal into 'the input stream' of gradle run -task
run {
    standardInput = System.in
}



// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    testCompile 'junit:junit:4.12'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:3.8.2'
}

// 
apply plugin: 'checkstyle'
